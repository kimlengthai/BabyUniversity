{"ast":null,"code":"'use strict';\n\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { WorkletEventHandler } from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../reanimated2/core';\nimport { SharedTransition, LayoutAnimationType } from '../reanimated2/layoutReanimation';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport { startWebLayoutAnimation, tryActivateLayoutTransition, configureWebLayoutAnimations, getReducedMotionFromConfig, saveSnapshot } from '../reanimated2/layoutReanimation/web';\nimport { updateLayoutAnimations } from '../reanimated2/UpdateLayoutAnimations';\nimport { addHTMLMutationObserver } from '../reanimated2/layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\nvar IS_WEB = isWeb();\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nexport function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n      _defineProperty(_assertThisInitialized(_this), \"jestAnimatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_sharedElementTransition\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_jsPropsUpdater\", new JSPropsUpdater());\n      _defineProperty(_assertThisInitialized(_this), \"_InlinePropManager\", new InlinePropManager());\n      _defineProperty(_assertThisInitialized(_this), \"_PropsFilter\", new PropsFilter());\n      _defineProperty(_assertThisInitialized(_this), \"_viewInfo\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"context\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = IS_WEB ? ref : findNodeHandle(ref);\n          _this._viewTag = tag;\n          var _this$props3 = _this.props,\n            layout = _this$props3.layout,\n            entering = _this$props3.entering,\n            exiting = _this$props3.exiting,\n            sharedTransitionTag = _this$props3.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            if (sharedTransitionTag) {\n              _this._configureSharedTransition();\n            }\n            var skipEntering = (_this$context = _this.context) === null || _this$context === void 0 ? void 0 : _this$context.current;\n            if (entering && !skipEntering) {\n              var _this$props;\n              updateLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering, (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.style, AnimatedComponent.displayName));\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if (isJest()) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._viewTag = this._getViewInfo().viewTag;\n        this._attachNativeEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          if (this.props.exiting) {\n            saveSnapshot(this._component);\n          }\n          if (!this.props.entering || getReducedMotionFromConfig(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.ENTERING);\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_sharedElementT;\n        this._detachNativeEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        if (this.props.sharedTransitionTag) {\n          this._configureSharedTransition(true);\n        }\n        (_this$_sharedElementT = this._sharedElementTransition) === null || _this$_sharedElementT === void 0 || _this$_sharedElementT.unregisterTransition(this._viewTag, true);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this._component && this.props.exiting && !getReducedMotionFromConfig(this.props.exiting)) {\n          addHTMLMutationObserver();\n          startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.EXITING);\n        } else if (exiting) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n          if (!reduceMotionInExiting) {\n            var _this$props2;\n            updateLayoutAnimations(this._viewTag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n          }\n        }\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component, _getScrollableNode, _ref;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? (_getScrollableNode = (_ref = this._component).getScrollableNode) === null || _getScrollableNode === void 0 ? void 0 : _getScrollableNode.call(_ref) : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('workletEventHandler', prop) && prop.workletEventHandler instanceof WorkletEventHandler) {\n            prop.workletEventHandler.registerForEvents(this._viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('workletEventHandler', prop) && prop.workletEventHandler instanceof WorkletEventHandler) {\n            prop.workletEventHandler.unregisterFromEvents(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (IS_WEB && this._styles !== null) {\n          for (var style of this._styles) {\n            style.viewsRef.remove(this);\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (isFabric()) {\n            removeFromPropsRegistry(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateNativeEvents\",\n      value: function _updateNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prevProp = prevProps[key];\n          if (has('workletEventHandler', prevProp) && prevProp.workletEventHandler instanceof WorkletEventHandler) {\n            var newProp = this.props[key];\n            if (!newProp) {\n              prevProp.workletEventHandler.unregisterFromEvents(this._viewTag);\n            } else if (has('workletEventHandler', newProp) && newProp.workletEventHandler instanceof WorkletEventHandler && newProp.workletEventHandler !== prevProp.workletEventHandler) {\n              prevProp.workletEventHandler.unregisterFromEvents(this._viewTag);\n              newProp.workletEventHandler.registerForEvents(this._viewTag);\n            }\n          }\n        }\n        for (var _key in this.props) {\n          var _newProp = this.props[_key];\n          if (has('workletEventHandler', _newProp) && _newProp.workletEventHandler instanceof WorkletEventHandler && !prevProps[_key]) {\n            _newProp.workletEventHandler.registerForEvents(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 || (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 || _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3, _getAnimatableRef, _ref2;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? (_getAnimatableRef = (_ref2 = this._component).getAnimatableRef) === null || _getAnimatableRef === void 0 ? void 0 : _getAnimatableRef.call(_ref2) : this;\n        if (IS_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          var viewInfo = getViewInfo(hostInstance);\n          viewTag = viewInfo.viewTag;\n          viewName = viewInfo.viewName;\n          viewConfig = viewInfo.viewConfig;\n          shadowNodeWrapper = isFabric() ? getShadowNodeWrapperFromRef(this) : null;\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && styles[0] === prevStyles[0];\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return style === prevStyle;\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.jestAnimatedStyle.value = _objectSpread(_objectSpread({}, _this2.jestAnimatedStyle.value), style.initial.value);\n            style.jestAnimatedStyle.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        if (this.props.sharedTransitionTag !== undefined || prevProps.sharedTransitionTag !== undefined) {\n          this._configureSharedTransition();\n        }\n        this._updateNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting) {\n          saveSnapshot(this._component);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !getReducedMotionFromConfig(this.props.layout)) {\n          tryActivateLayoutTransition(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        var layout = this.props.layout ? maybeBuild(this.props.layout, undefined, AnimatedComponent.displayName) : undefined;\n        updateLayoutAnimations(this._viewTag, LayoutAnimationType.LAYOUT, layout);\n      }\n    }, {\n      key: \"_configureSharedTransition\",\n      value: function _configureSharedTransition() {\n        var _ref3, _this$props$sharedTra;\n        var isUnmounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (IS_WEB) {\n          return;\n        }\n        var sharedTransitionTag = this.props.sharedTransitionTag;\n        if (!sharedTransitionTag) {\n          var _this$_sharedElementT2;\n          (_this$_sharedElementT2 = this._sharedElementTransition) === null || _this$_sharedElementT2 === void 0 || _this$_sharedElementT2.unregisterTransition(this._viewTag, isUnmounting);\n          this._sharedElementTransition = null;\n          return;\n        }\n        var sharedElementTransition = (_ref3 = (_this$props$sharedTra = this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : this._sharedElementTransition) != null ? _ref3 : new SharedTransition();\n        sharedElementTransition.registerTransition(this._viewTag, sharedTransitionTag, isUnmounting);\n        this._sharedElementTransition = sharedElementTransition;\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_component4;\n        if (IS_WEB && ((_this$_component4 = this._component) === null || _this$_component4 === void 0 ? void 0 : _this$_component4.getBoundingClientRect) !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if (isJest()) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !getReducedMotionFromConfig(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = _objectSpread(_objectSpread({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}), {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, filteredProps, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  _defineProperty(AnimatedComponent, \"contextType\", SkipEnteringContext);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_defineProperty2","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","_extends","assign","bind","target","i","source","key","hasOwnProperty","_defineProperty","obj","value","_toPropertyKey","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","React","findNodeHandle","Platform","WorkletEventHandler","invariant","adaptViewConfig","RNRenderer","enableLayoutAnimations","SharedTransition","LayoutAnimationType","getShadowNodeWrapperFromRef","removeFromPropsRegistry","getReduceMotionFromConfig","maybeBuild","SkipEnteringContext","JSPropsUpdater","has","flattenArray","setAndForwardRef","isFabric","isJest","isWeb","shouldBeUseWeb","InlinePropManager","PropsFilter","startWebLayoutAnimation","tryActivateLayoutTransition","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","updateLayoutAnimations","addHTMLMutationObserver","getViewInfo","IS_WEB","onlyAnimatedStyles","styles","style","viewDescriptors","createAnimatedComponent","Component","options","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_viewTag","_this$props3","layout","entering","exiting","sharedTransitionTag","_this$context","_configureSharedTransition","skipEntering","context","current","_this$props","ENTERING","displayName","_component","jestAnimatedStyle","componentDidMount","_getViewInfo","viewTag","_attachNativeEvents","_jsPropsUpdater","addOnJSPropsChangeListener","_attachAnimatedStyles","_InlinePropManager","attachInlineProps","_configureLayoutTransition","_isFirstRender","componentWillUnmount","_this$_sharedElementT","_detachNativeEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","_sharedElementTransition","unregisterTransition","EXITING","reduceMotionInExiting","getReduceMotion","_this$props2","_getEventViewRef","_this$_component","_getScrollableNode","_ref","getScrollableNode","prop","workletEventHandler","registerForEvents","unregisterFromEvents","_styles","viewsRef","remove","_this$props$animatedP","animatedProps","_updateNativeEvents","prevProps","prevProp","newProp","_updateFromNative","setNativeProps","_this$_component2","_this$_component2$set","_this$_component3","_getAnimatableRef","_ref2","_viewInfo","undefined","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","findHostInstance_DEPRECATED","Error","viewInfo","_this2","_this$props$animatedP2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","some","add","initial","componentDidUpdate","_prevState","snapshot","oldLayout","LAYOUT","_ref3","_this$props$sharedTra","isUnmounting","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","registerTransition","getSnapshotBeforeUpdate","_this$_component4","getBoundingClientRect","render","filteredProps","_PropsFilter","filterNonAnimatedProps","_filteredProps$style","visibility","platformProps","select","web","default","collapsable","createElement","_setComponentRef","forwardRef"],"sources":["C:\\Users\\tcdin\\Desktop\\BabyUniversity\\front-end\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform } from 'react-native';\nimport { WorkletEventHandler } from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../reanimated2/core';\nimport {\n  SharedTransition,\n  LayoutAnimationType,\n} from '../reanimated2/layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../reanimated2/commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../reanimated2';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n} from './commonTypes';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport {\n  isFabric,\n  isJest,\n  isWeb,\n  shouldBeUseWeb,\n} from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../reanimated2/layoutReanimation/web';\nimport { updateLayoutAnimations } from '../reanimated2/UpdateLayoutAnimations';\nimport type { CustomConfig } from '../reanimated2/layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../reanimated2/layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\n\nconst IS_WEB = isWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = this._getViewInfo().viewTag as number;\n      this._attachNativeEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(this._viewTag, true);\n\n      const exiting = this.props.exiting;\n      if (\n        IS_WEB &&\n        this._component &&\n        this.props.exiting &&\n        !getReducedMotionFromConfig(this.props.exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._viewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return (this._component as AnimatedComponentRef)?.getScrollableNode\n        ? (this._component as AnimatedComponentRef).getScrollableNode?.()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('workletEventHandler', prop) &&\n          prop.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          prop.workletEventHandler.registerForEvents(this._viewTag, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('workletEventHandler', prop) &&\n          prop.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          prop.workletEventHandler.unregisterFromEvents(this._viewTag);\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (IS_WEB && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewsRef.remove(this);\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(this._viewTag);\n        }\n      }\n    }\n\n    _updateNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prevProp = prevProps[key];\n        if (\n          has('workletEventHandler', prevProp) &&\n          prevProp.workletEventHandler instanceof WorkletEventHandler\n        ) {\n          const newProp = this.props[key];\n          if (!newProp) {\n            // Prop got deleted\n            prevProp.workletEventHandler.unregisterFromEvents(this._viewTag);\n          } else if (\n            has('workletEventHandler', newProp) &&\n            newProp.workletEventHandler instanceof WorkletEventHandler &&\n            newProp.workletEventHandler !== prevProp.workletEventHandler\n          ) {\n            // Prop got changed\n            prevProp.workletEventHandler.unregisterFromEvents(this._viewTag);\n            newProp.workletEventHandler.registerForEvents(this._viewTag);\n          }\n        }\n      }\n\n      for (const key in this.props) {\n        const newProp = this.props[key];\n        if (\n          has('workletEventHandler', newProp) &&\n          newProp.workletEventHandler instanceof WorkletEventHandler &&\n          !prevProps[key]\n        ) {\n          // Prop got added\n          newProp.workletEventHandler.registerForEvents(this._viewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._updateNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as HTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(this._viewTag, LayoutAnimationType.LAYOUT, layout);\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this._viewTag,\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this._viewTag,\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        this._viewTag = tag as number;\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering) {\n            updateLayoutAnimations(\n              tag as number,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (isJest()) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      return (\n        <Component\n          {...filteredProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}