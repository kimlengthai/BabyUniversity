{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tcdin\\\\Desktop\\\\BabyUniversity\\\\front-end\\\\PinPage.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PinEntryScreen = function PinEntryScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n  var navigation = useNavigation();\n  var userId = route.params.userId;\n  var handlePinChange = function handlePinChange(enteredPin) {\n    setPin(enteredPin);\n  };\n  var verifyPin = function () {\n    var _ref2 = _asyncToGenerator(function* (enteredPin) {\n      try {\n        var response = yield fetch(`https://yourapi.com/users/${userId}`);\n        var userData = yield response.json();\n        if (userData.parentalPin === enteredPin) {\n          navigation.navigate('Payment');\n        } else {\n          setErrorMessage('Incorrect PIN. Please try again.');\n          setTimeout(function () {\n            setErrorMessage('');\n          }, 5000);\n        }\n      } catch (error) {\n        console.error('Error verifying PIN:', error);\n      }\n    });\n    return function verifyPin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handlePinSubmit = function handlePinSubmit() {\n    if (pin.length === 4) {\n      verifyPin(pin);\n    } else {\n      setErrorMessage('Please enter a 4-digit PIN.');\n      setTimeout(function () {\n        setErrorMessage('');\n      }, 5000);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.prompt,\n      children: \"Enter 4-Digit PIN:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      style: styles.input,\n      value: pin,\n      onChangeText: handlePinChange,\n      keyboardType: \"numeric\",\n      maxLength: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), errorMessage ? _jsxDEV(Text, {\n      style: styles.error,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, _this) : null, _jsxDEV(Button, {\n      title: \"Submit\",\n      onPress: handlePinSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  prompt: {\n    fontSize: 18,\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 20,\n    textAlign: 'center',\n    fontSize: 24\n  },\n  error: {\n    color: 'red',\n    marginBottom: 20\n  }\n});\nexport default PinEntryScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","useNavigation","jsxDEV","_jsxDEV","PinEntryScreen","_ref","route","_useState","_useState2","_slicedToArray","pin","setPin","_useState3","_useState4","errorMessage","setErrorMessage","navigation","userId","params","handlePinChange","enteredPin","verifyPin","_ref2","_asyncToGenerator","response","fetch","userData","json","parentalPin","navigate","setTimeout","error","console","_x","apply","arguments","handlePinSubmit","length","style","styles","container","children","prompt","fileName","_jsxFileName","lineNumber","columnNumber","_this","input","value","onChangeText","keyboardType","maxLength","title","onPress","create","flex","justifyContent","alignItems","backgroundColor","fontSize","marginBottom","width","padding","borderColor","borderWidth","textAlign","color"],"sources":["C:/Users/tcdin/Desktop/BabyUniversity/front-end/PinPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst PinEntryScreen = ({ route }) => {\r\n  const [pin, setPin] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigation = useNavigation();\r\n  const { userId } = route.params; // assuming userId is passed as a parameter\r\n\r\n  const handlePinChange = (enteredPin) => {\r\n    setPin(enteredPin);\r\n  };\r\n\r\n  const verifyPin = async (enteredPin) => {\r\n    try {\r\n      // Fetch the user data from the database using the userId\r\n      const response = await fetch(`https://yourapi.com/users/${userId}`);\r\n      const userData = await response.json();\r\n\r\n      // Check if the entered PIN matches the stored PIN\r\n      if (userData.parentalPin === enteredPin) {\r\n        // Navigate to the payments page\r\n        navigation.navigate('Payment');\r\n      } else {\r\n        // Show error message\r\n        setErrorMessage('Incorrect PIN. Please try again.');\r\n        setTimeout(() => {\r\n          setErrorMessage('');\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error verifying PIN:', error);\r\n    }\r\n  };\r\n\r\n  const handlePinSubmit = () => {\r\n    if (pin.length === 4) {\r\n      verifyPin(pin);\r\n    } else {\r\n      setErrorMessage('Please enter a 4-digit PIN.');\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.prompt}>Enter 4-Digit PIN:</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={pin}\r\n        onChangeText={handlePinChange}\r\n        keyboardType=\"numeric\"\r\n        maxLength={4}\r\n      />\r\n      {errorMessage ? <Text style={styles.error}>{errorMessage}</Text> : null}\r\n      <Button title=\"Submit\" onPress={handlePinSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  prompt: {\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    padding: 10,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    fontSize: 24,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default PinEntryScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}