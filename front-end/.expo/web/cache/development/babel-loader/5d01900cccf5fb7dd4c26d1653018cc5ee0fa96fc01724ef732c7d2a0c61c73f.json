{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { EventTypes } from '../interfaces';\nimport GestureHandler from './GestureHandler';\nvar DEFAULT_MAX_DURATION_MS = 500;\nvar DEFAULT_MAX_DELAY_MS = 500;\nvar DEFAULT_NUMBER_OF_TAPS = 1;\nvar DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\nvar TapGestureHandler = function (_GestureHandler) {\n  _inherits(TapGestureHandler, _GestureHandler);\n  function TapGestureHandler() {\n    var _this;\n    _classCallCheck(this, TapGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, TapGestureHandler, [].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"maxDeltaX\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(_assertThisInitialized(_this), \"maxDeltaY\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(_assertThisInitialized(_this), \"maxDistSq\", Number.MIN_SAFE_INTEGER);\n    _defineProperty(_assertThisInitialized(_this), \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty(_assertThisInitialized(_this), \"maxDelayMs\", DEFAULT_MAX_DELAY_MS);\n    _defineProperty(_assertThisInitialized(_this), \"numberOfTaps\", DEFAULT_NUMBER_OF_TAPS);\n    _defineProperty(_assertThisInitialized(_this), \"minNumberOfPointers\", DEFAULT_MIN_NUMBER_OF_POINTERS);\n    _defineProperty(_assertThisInitialized(_this), \"currentMaxNumberOfPointers\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"startY\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"offsetX\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"offsetY\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"lastX\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"lastY\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"waitTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"delayTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"tapsSoFar\", 0);\n    return _this;\n  }\n  _createClass(TapGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n      if (this.config.numberOfTaps !== undefined) {\n        this.numberOfTaps = this.config.numberOfTaps;\n      }\n      if (this.config.maxDurationMs !== undefined) {\n        this.maxDurationMs = this.config.maxDurationMs;\n      }\n      if (this.config.maxDelayMs !== undefined) {\n        this.maxDelayMs = this.config.maxDelayMs;\n      }\n      if (this.config.maxDeltaX !== undefined) {\n        this.maxDeltaX = this.config.maxDeltaX;\n      }\n      if (this.config.maxDeltaY !== undefined) {\n        this.maxDeltaY = this.config.maxDeltaY;\n      }\n      if (this.config.maxDist !== undefined) {\n        this.maxDistSq = this.config.maxDist * this.config.maxDist;\n      }\n      if (this.config.minPointers !== undefined) {\n        this.minNumberOfPointers = this.config.minPointers;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"resetConfig\", this).call(this);\n      this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n      this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n      this.maxDistSq = Number.MIN_SAFE_INTEGER;\n      this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n      this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n      this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n      this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n    }\n  }, {\n    key: \"clearTimeouts\",\n    value: function clearTimeouts() {\n      clearTimeout(this.waitTimeout);\n      clearTimeout(this.delayTimeout);\n    }\n  }, {\n    key: \"startTap\",\n    value: function startTap() {\n      var _this2 = this;\n      this.clearTimeouts();\n      this.waitTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"endTap\",\n    value: function endTap() {\n      var _this3 = this;\n      this.clearTimeouts();\n      if (++this.tapsSoFar === this.numberOfTaps && this.currentMaxNumberOfPointers >= this.minNumberOfPointers) {\n        this.activate();\n      } else {\n        this.delayTimeout = setTimeout(function () {\n          return _this3.fail();\n        }, this.maxDelayMs);\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      if (!this.isButtonInConfig(event.button)) {\n        return;\n      }\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.trySettingPosition(event);\n      this.startX = event.x;\n      this.startY = event.y;\n      this.lastX = event.x;\n      this.lastY = event.y;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tracker.addToTracker(event);\n      this.trySettingPosition(event);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.tracker.getLastAvgX();\n      this.startY = this.tracker.getLastAvgY();\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.tracker.removeFromTracker(event.pointerId);\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY = this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.updateState(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.updateState(event);\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(event) {\n      if (this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()) {\n        this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n      }\n      if (this.shouldFail()) {\n        this.fail();\n        return;\n      }\n      switch (this.currentState) {\n        case State.UNDETERMINED:\n          if (event.eventType === EventTypes.DOWN) {\n            this.begin();\n          }\n          this.startTap();\n          break;\n        case State.BEGAN:\n          if (event.eventType === EventTypes.UP) {\n            this.endTap();\n          }\n          if (event.eventType === EventTypes.DOWN) {\n            this.startTap();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"trySettingPosition\",\n    value: function trySettingPosition(event) {\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.startX = event.x;\n      this.startY = event.y;\n    }\n  }, {\n    key: \"shouldFail\",\n    value: function shouldFail() {\n      var dx = this.lastX - this.startX + this.offsetX;\n      if (this.maxDeltaX !== Number.MIN_SAFE_INTEGER && Math.abs(dx) > this.maxDeltaX) {\n        return true;\n      }\n      var dy = this.lastY - this.startY + this.offsetY;\n      if (this.maxDeltaY !== Number.MIN_SAFE_INTEGER && Math.abs(dy) > this.maxDeltaY) {\n        return true;\n      }\n      var distSq = dy * dy + dx * dx;\n      return this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      _get(_getPrototypeOf(TapGestureHandler.prototype), \"activate\", this).call(this);\n      this.end();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.resetProgress();\n      this.clearTimeouts();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      this.clearTimeouts();\n      this.tapsSoFar = 0;\n      this.currentMaxNumberOfPointers = 0;\n    }\n  }]);\n  return TapGestureHandler;\n}(GestureHandler);\nexport { TapGestureHandler as default };","map":{"version":3,"names":["State","EventTypes","GestureHandler","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","_GestureHandler","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_assertThisInitialized","Number","MIN_SAFE_INTEGER","_createClass","key","value","init","ref","propsRef","_get","_getPrototypeOf","prototype","call","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","config","numberOfTaps","undefined","maxDurationMs","maxDelayMs","maxDeltaX","maxDeltaY","maxDist","maxDistSq","minPointers","minNumberOfPointers","resetConfig","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","_this2","setTimeout","fail","endTap","_this3","tapsSoFar","currentMaxNumberOfPointers","activate","onPointerDown","event","isButtonInConfig","button","tracker","addToTracker","trySettingPosition","startX","x","startY","y","lastX","lastY","updateState","onPointerAdd","offsetX","offsetY","getLastAvgX","getLastAvgY","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","getTrackedPointersCount","shouldFail","currentState","UNDETERMINED","eventType","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress","default"],"sources":["C:\\Users\\tcdin\\Desktop\\BabyUniversity\\front-end\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  //Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (\n      this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()\n    ) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}