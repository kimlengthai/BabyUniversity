{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { ContinousBaseGesture } from './gesture';\nvar _worklet_2192363871004_init_data = {\n  code: \"function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return{...current,...changePayload};}\",\n  location: \"C:\\\\Users\\\\tcdin\\\\Desktop\\\\BabyUniversity\\\\front-end\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\forceTouchGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"forceChange\\\",\\\"force\\\"],\\\"sources\\\":[\\\"C:/Users/tcdin/Desktop/BabyUniversity/front-end/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/forceTouchGesture.js\\\"],\\\"mappings\\\":\\\"AAIA,SAAAA,qBAASA,CAAsBC,OAAA,CAAOC,QAAE,CAAQ,CAG9C,GAAI,CAAAC,aAAa,CAEjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KACvB,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAK,CAAGJ,QAAQ,CAACI,KACxC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CACjB,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.9.0\"\n};\nvar changeEventCalculator = function () {\n  var _e = [new global.Error(), 1, -27];\n  var changeEventCalculator = function changeEventCalculator(current, previous) {\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        forceChange: current.force\n      };\n    } else {\n      changePayload = {\n        forceChange: current.force - previous.force\n      };\n    }\n    return _objectSpread(_objectSpread({}, current), changePayload);\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 2192363871004;\n  changeEventCalculator.__initData = _worklet_2192363871004_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport var ForceTouchGesture = function (_ContinousBaseGesture) {\n  _inherits(ForceTouchGesture, _ContinousBaseGesture);\n  function ForceTouchGesture() {\n    var _this;\n    _classCallCheck(this, ForceTouchGesture);\n    _this = _callSuper(this, ForceTouchGesture);\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n    _this.handlerName = 'ForceTouchGestureHandler';\n    return _this;\n  }\n  _createClass(ForceTouchGesture, [{\n    key: \"minForce\",\n    value: function minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n  }, {\n    key: \"maxForce\",\n    value: function maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n  }, {\n    key: \"feedbackOnActivation\",\n    value: function feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(ForceTouchGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return ForceTouchGesture;\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","_worklet_2192363871004_init_data","code","location","sourceMap","version","changeEventCalculator","_e","global","Error","current","previous","changePayload","undefined","forceChange","force","_objectSpread","__closure","__workletHash","__initData","__stackDetails","ForceTouchGesture","_ContinousBaseGesture","_inherits","_this","_classCallCheck","_callSuper","_defineProperty","_assertThisInitialized","handlerName","_createClass","key","value","minForce","config","maxForce","feedbackOnActivation","onChange","callback","handlers","_get","_getPrototypeOf","prototype","call"],"sources":["C:\\Users\\tcdin\\Desktop\\BabyUniversity\\front-end\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\forceTouchGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport {\n  ForceTouchGestureConfig,\n  ForceTouchGestureHandlerEventPayload,\n} from '../ForceTouchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\nexport type ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: ForceTouchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force,\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class ForceTouchGesture extends ContinousBaseGesture<\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  /**\n   * A minimal pressure that is required before gesture can activate.\n   * Should be a value from range [0.0, 1.0]. Default is 0.2.\n   * @param force\n   */\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  /**\n   * A maximal pressure that could be applied for gesture.\n   * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n   * @param force\n   */\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  /**\n   * Value defining if haptic feedback has to be performed on activation.\n   * @param value\n   */\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        GestureUpdateEvent<\n          ForceTouchGestureHandlerEventPayload &\n            ForceTouchGestureChangeEventPayload\n        >\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAA4BA,oBAA5B,QAAwD,WAAxD;AAAA,IAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAAA,IAWSC,qBAAT;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAH,qBAAA,YAAAA,sBACEI,OADF,EAEEC,QAFF,EAGE;IAEA,IAAIC,aAAJ;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;MAC1BD,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK;MADP,CAAhB;IAGD,CAJD,MAIO;MACLH,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK,KAAR,GAAgBJ,QAAQ,CAACI;MADxB,CAAhB;IAGD;IAED,OAAAC,aAAA,CAAAA,aAAA,KAAYN,OAAL,GAAiBE,aAAA;EACzB;EAAAN,qBAAA,CAAAW,SAAA;EAAAX,qBAAA,CAAAY,aAAA;EAAAZ,qBAAA,CAAAa,UAAA,GAAAlB,gCAAA;EAAAK,qBAAA,CAAAc,cAAA,GAAAb,EAAA;EAAA,OAAAD,qBAAA;AAAA,CAjBD;AAmBA,WAAae,iBAAN,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,qBAAA;EAML,SAAAD,kBAAA,EAAc;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,iBAAA;IACZG,KAAA,GAAAE,UAAA,OAAAL,iBAAA;IADYM,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,aAF+C,EAE/C;IAGZA,KAAA,CAAKK,WAAL,GAAmB,0BAAnB;IAAA,OAAAL,KAAA;EACD;EAAAM,YAAA,CAAAT,iBAAA;IAAAU,GAAA;IAAAC,KAAA,EAOD,SAAAC,SAASlB,KAAD,EAAgB;MACtB,KAAKmB,MAAL,CAAYD,QAAZ,GAAuBlB,KAAvB;MACA,OAAO,IAAP;IACD;EAAA;IAAAgB,GAAA;IAAAC,KAAA,EAOD,SAAAG,SAASpB,KAAD,EAAgB;MACtB,KAAKmB,MAAL,CAAYC,QAAZ,GAAuBpB,KAAvB;MACA,OAAO,IAAP;IACD;EAAA;IAAAgB,GAAA;IAAAC,KAAA,EAMD,SAAAI,qBAAqBJ,KAAD,EAAiB;MACnC,KAAKE,MAAL,CAAYE,oBAAZ,GAAmCJ,KAAnC;MACA,OAAO,IAAP;IACD;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAK,SACEC,QADM,EASN;MAEA,KAAKC,QAAL,CAAcjC,qBAAd,GAAsCA,qBAAtC;MACA,OAAAkC,IAAA,CAAAC,eAAA,CAAApB,iBAAA,CAAAqB,SAAA,qBAAAC,IAAA,OAAsBL,QAAf;IACR;EAAA;EAAA,OAAAjB,iBAAA;AAAA,EAtDoCrB,oBAAhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}