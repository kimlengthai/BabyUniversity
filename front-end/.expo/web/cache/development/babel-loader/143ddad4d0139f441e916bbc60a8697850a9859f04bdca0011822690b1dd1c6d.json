{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tcdin\\\\Desktop\\\\BabyUniversity\\\\front-end\\\\MenuButton.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport settingsIcon from './assets/menuImages/settings.png';\nimport kidIcon from './assets/menuImages/kidIcon.png';\nimport logoutIcon from './assets/menuImages/logoutIcon.png';\nimport toggleButtonIcon from './assets/menuImages/toggleButton.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MenuButton = function MenuButton(_ref) {\n  var userMode = _ref.userMode,\n    onOptionPress = _ref.onOptionPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  var toggleMenu = function toggleMenu() {\n    setIsOpen(!isOpen);\n  };\n  var handleOptionClick = function handleOptionClick(option) {\n    if (userMode === 'parents') {\n      if (option === 'Switch to parents mode') {\n        console.log(option);\n      } else if (option === 'Settings') {\n        console.log(option);\n      }\n    } else {\n      if (option === \"Switch to Kids mode\") {\n        console.log(option);\n      } else if (option === 'Settings') {\n        console.log(option);\n      } else if (option === 'Logout') {\n        console.log(option);\n      }\n    }\n  };\n  var parentOptions = [{\n    label: 'UserName',\n    image: userIcon\n  }, {\n    label: 'Settings',\n    image: settingsIcon\n  }];\n  var kidsOptions = [{\n    label: 'UserName',\n    image: userIcon\n  }, {\n    label: 'Switch to Kids mode',\n    image: kidIcon\n  }, {\n    label: 'Settings',\n    image: settingsIcon\n  }, {\n    label: 'Logout',\n    image: logoutIcon\n  }];\n  var options = userMode === 'parents' ? parentOptions : kidsOptions;\n  return _jsxDEV(View, {\n    style: styles.containerForMenu,\n    children: [_jsxDEV(TouchableOpacity, {\n      onPress: toggleMenu,\n      style: styles.toggleButton,\n      children: _jsxDEV(Image, {\n        source: toggleButtonIcon,\n        style: styles.toggleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), isOpen && _jsxDEV(View, {\n      style: styles.optionsContainer,\n      children: options.map(function (option, index) {\n        return _jsxDEV(TouchableOpacity, {\n          style: [styles.option, index === options.length - 1 && {\n            borderBottomWidth: 0\n          }],\n          onPress: function onPress() {\n            return handleOptionClick(option.label);\n          },\n          children: [_jsxDEV(View, {\n            style: styles.imageContainer,\n            children: _jsxDEV(Image, {\n              source: option.image,\n              style: styles.optionImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, _this), _jsxDEV(Text, {\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  containerForMenu: {\n    position: 'absolute',\n    top: 35,\n    left: 30,\n    zIndex: 1\n  },\n  toggleButton: {\n    backgroundColor: 'transparent',\n    borderRadius: 5,\n    color: '#898A8D'\n  },\n  toggleImage: {\n    width: 41,\n    height: 31\n  },\n  optionsContainer: {\n    marginTop: 5,\n    backgroundColor: 'lightgray',\n    borderRadius: 15,\n    marginLeft: 25\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n    paddingRight: 60\n  },\n  imageContainer: {\n    width: 47,\n    height: 44,\n    marginRight: 10\n  },\n  optionImage: {\n    flex: 1,\n    width: undefined,\n    height: undefined,\n    resizeMode: 'contain'\n  }\n});\nexport default MenuButton;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","StyleSheet","Image","settingsIcon","kidIcon","logoutIcon","toggleButtonIcon","jsxDEV","_jsxDEV","MenuButton","_ref","userMode","onOptionPress","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","toggleMenu","handleOptionClick","option","console","log","parentOptions","label","image","userIcon","kidsOptions","options","style","styles","containerForMenu","children","onPress","toggleButton","source","toggleImage","fileName","_jsxFileName","lineNumber","columnNumber","_this","optionsContainer","map","index","length","borderBottomWidth","imageContainer","optionImage","create","position","top","left","zIndex","backgroundColor","borderRadius","color","width","height","marginTop","marginLeft","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","paddingRight","marginRight","flex","undefined","resizeMode"],"sources":["C:/Users/tcdin/Desktop/BabyUniversity/front-end/MenuButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, Image } from 'react-native';\r\n\r\n// Import your images using ES6 import syntax\r\n//import userIcon from './assets/menuImages/userIcon';\r\nimport settingsIcon from './assets/menuImages/settings.png';\r\nimport kidIcon from './assets/menuImages/kidIcon.png';\r\nimport logoutIcon from './assets/menuImages/logoutIcon.png';\r\nimport toggleButtonIcon from './assets/menuImages/toggleButton.png';\r\n\r\nconst MenuButton = ({ userMode, onOptionPress }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    // handle the option that is clicked\r\n    if(userMode === 'parents'){\r\n        if(option === 'Switch to parents mode'){\r\n            console.log(option);\r\n            // navigate to the parent view page\r\n        }\r\n        else if(option === 'Settings'){\r\n            console.log(option);\r\n            // navigate to the settings view page\r\n        }\r\n    } else {\r\n        if(option === \"Switch to Kids mode\"){\r\n            console.log(option);\r\n            // switch to kids bedroom view page\r\n        }\r\n        else if(option === 'Settings'){\r\n            console.log(option);\r\n            // switch to settings view page\r\n        } else if(option === 'Logout'){\r\n            console.log(option);\r\n            // logout the user\r\n        }\r\n    }\r\n  };\r\n\r\n  // Options for parents mode\r\n  const parentOptions = [\r\n    { label: 'UserName', image: userIcon },\r\n    { label: 'Settings', image: settingsIcon },\r\n  ];\r\n\r\n  // Options for kids mode\r\n  const kidsOptions = [\r\n    { label: 'UserName', image: userIcon },\r\n    { label: 'Switch to Kids mode', image: kidIcon },\r\n    { label: 'Settings', image: settingsIcon },\r\n    { label: 'Logout', image: logoutIcon },\r\n  ];\r\n\r\n  const options = userMode === 'parents' ? parentOptions : kidsOptions;\r\n\r\n  return (\r\n    <View style={styles.containerForMenu}>\r\n      <TouchableOpacity onPress={toggleMenu} style={styles.toggleButton}>\r\n        <Image\r\n          source={toggleButtonIcon}\r\n          style={styles.toggleImage}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      {isOpen && (\r\n        <View style={styles.optionsContainer}>\r\n          {options.map((option, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={[\r\n                styles.option,\r\n                index === options.length - 1 && { borderBottomWidth: 0 }\r\n              ]}\r\n              onPress={() => handleOptionClick(option.label)}\r\n            >\r\n              <View style={styles.imageContainer}>\r\n                <Image source={option.image} style={styles.optionImage} />\r\n              </View>\r\n              <Text>{option.label}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerForMenu: {\r\n    position: 'absolute',\r\n    top: 35,\r\n    left: 30,\r\n    zIndex: 1,\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: 'transparent',\r\n    borderRadius: 5,\r\n    color: '#898A8D',\r\n  },\r\n  toggleImage: {\r\n    width: 41,\r\n    height: 31,\r\n  },\r\n  optionsContainer: {\r\n    marginTop: 5,\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: 15,\r\n    marginLeft: 25,\r\n  },\r\n  option: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'gray',\r\n    paddingRight: 60,\r\n  },\r\n  imageContainer: {\r\n    width: 47,\r\n    height: 44,\r\n    marginRight: 10,\r\n  },\r\n  optionImage: {\r\n    flex: 1,\r\n    width: undefined,\r\n    height: undefined,\r\n    resizeMode: 'contain',\r\n  },\r\n});\r\n\r\nexport default MenuButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}