{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { CodedError } from './CodedError';\nimport Platform from '../Platform';\nexport var UnavailabilityError = function (_CodedError) {\n  _inherits(UnavailabilityError, _CodedError);\n  function UnavailabilityError(moduleName, propertyName) {\n    _classCallCheck(this, UnavailabilityError);\n    return _callSuper(this, UnavailabilityError, ['ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`]);\n  }\n  return _createClass(UnavailabilityError);\n}(CodedError);","map":{"version":3,"names":["CodedError","Platform","UnavailabilityError","_CodedError","_inherits","moduleName","propertyName","_classCallCheck","_callSuper","OS","_createClass"],"sources":["C:\\Users\\tcdin\\Desktop\\BabyUniversity\\front-end\\node_modules\\expo-modules-core\\src\\errors\\UnavailabilityError.ts"],"sourcesContent":["import { CodedError } from './CodedError';\nimport Platform from '../Platform';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,OAAOC,QAAQ,MAAM,aAAa;AAOlC,WAAaC,mBAAoB,aAAAC,WAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,WAAA;EAC/B,SAAAD,oBAAYG,UAAkB,EAAEC,YAAoB;IAAAC,eAAA,OAAAL,mBAAA;IAAA,OAAAM,UAAA,OAAAN,mBAAA,GAEhD,iBAAiB,EACjB,0BAA0BG,UAAU,IAAIC,YAAY,wBAAwBL,QAAQ,CAACQ,EAAE,oEAAoE;EAE/J;EAAC,OAAAC,YAAA,CAAAR,mBAAA;AAAA,EANsCF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}